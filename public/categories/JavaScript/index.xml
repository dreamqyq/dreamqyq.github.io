<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on Enoch&#39;s Blog</title>
    <link>https://dreamqyq.github.io/categories/JavaScript/</link>
    <description>Recent content in JavaScript on Enoch&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 24 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://dreamqyq.github.io/categories/JavaScript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript中的函数防抖动与节流</title>
      <link>https://dreamqyq.github.io/post/JavaScript/debounce-and-throttle-in-javascript/</link>
      <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dreamqyq.github.io/post/JavaScript/debounce-and-throttle-in-javascript/</guid>
      <description>摘要：JavaScript 中的函数防抖和节流是很常用的需求，前端面试也是频率比较高被问到的知识，本文就通过二者的概念、实现思路、示例代码和应用场景来介绍一下它们。 概念 函数防抖（debounce）：其概念其实是从机械开关和继电器的“去弹跳”（debounce）衍生出来的，基本思路就</description>
    </item>
    
    <item>
      <title>JavaScript中的继承</title>
      <link>https://dreamqyq.github.io/post/JavaScript/inheritance-in-javascript/</link>
      <pubDate>Sat, 22 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dreamqyq.github.io/post/JavaScript/inheritance-in-javascript/</guid>
      <description>摘要：继承是面向对象思想中的重要概念，虽然严格来说 JavaScript 并属于面向对象类型的语言，但最终还是在ES 6 中正式引入了继承的概念。本文就来介绍一下继承的概念、以及在 ES5 和 ES6 中两种写继承的方法。 面向对象中的继承 话不多说，先来看一下维基百科的解释 继承（ inheritance）是面向对象软件技术当</description>
    </item>
    
    <item>
      <title>JS中的面向对象程序设计初识</title>
      <link>https://dreamqyq.github.io/post/JavaScript/object-oriented-programming-in-javascript/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dreamqyq.github.io/post/JavaScript/object-oriented-programming-in-javascript/</guid>
      <description>前言：面向对象程序设计（Object-oriented programming，简称OOP），是一种常见的编程思想。JavaScript 的核心是支持面向对象的，同时它也提供了强大灵活的 OOP 语言能力。本文从对面向对象编程的介绍开始，和您一起探索 JavaScript 的对象模型，最后描述 JavaScript 当中面向对象编程的</description>
    </item>
    
    <item>
      <title>MVC设计模式在JavaScript中的运用</title>
      <link>https://dreamqyq.github.io/post/JavaScript/mvc-design-pattern-in-javascript/</link>
      <pubDate>Fri, 03 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dreamqyq.github.io/post/JavaScript/mvc-design-pattern-in-javascript/</guid>
      <description>前言：MVC模式是一种很有名的、应用很广的设计模式，包括在前端领域也是非常有用的代码优化思路，本文就详细介绍总结一下MVC模式以及它JavaScript中的应用。（部分文字摘自维基百科和阮一峰博客） 1、MVC 模式的概念 MVC模式（Model–view–controller）是软件</description>
    </item>
    
    <item>
      <title>认识JavaScript中的函数</title>
      <link>https://dreamqyq.github.io/post/JavaScript/function-in-javascript/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dreamqyq.github.io/post/JavaScript/function-in-javascript/</guid>
      <description>前言：本文将详细的介绍JS中函数的相关概念（包括函数的call stack 、this 、作用域、闭包、柯里化、高阶函数等），总结函数中比较容易理解错的坑，让我们更加全面的认识函数。部分概念与代码参考阮一峰JS教程。 1、什么是函数 函数是一段可以反复调用的代码块。函数还能接受输入的参数，不同的参</description>
    </item>
    
    <item>
      <title>JavaScript里的数组详解</title>
      <link>https://dreamqyq.github.io/post/JavaScript/array-in-javascript/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dreamqyq.github.io/post/JavaScript/array-in-javascript/</guid>
      <description>前言：这篇文章用于了解总结JS里的数组的相关知识。我会从基本概念，构造方法和常用的API这几个方面来介绍数组。部分概念与代码摘自阮一峰JS教程。 1、数组是什么 数组（array）是按次序排列的一组值。每个值的位置都有编号（从0开始），整个数组用方括号表示。 其实本质上，数组属于一种特</description>
    </item>
    
    <item>
      <title>JavaScript中的文档对象模型DOM</title>
      <link>https://dreamqyq.github.io/post/JavaScript/document-object-model-in-javascript/</link>
      <pubDate>Mon, 18 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dreamqyq.github.io/post/JavaScript/document-object-model-in-javascript/</guid>
      <description>前言：在JavaScript中，DOM操作虽然公认的不好用，但它是最基础的，那么就让我们通过本文就来认识一下DOM的基本概念、一些常用的API以及一些需要注意的知识点。 1、DOM 到底是个什么鬼 文档对象模型 (Document Object Model ，即DOM) 是HTML和XML文档的编程接口。它提供了对文档的结构化的</description>
    </item>
    
    <item>
      <title>初识传说中的原型与原型链</title>
      <link>https://dreamqyq.github.io/post/JavaScript/prototype-prototype-chain-in-js/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dreamqyq.github.io/post/JavaScript/prototype-prototype-chain-in-js/</guid>
      <description>前言：原型与原型链这两个名词毋庸置疑听起来是很高大上的，以前总是出现在传说中，这两天看了教程，准备介绍一下这传说中的原型以及原型链。本文将从全局对象引入，分别介绍Number、Boolean、String、Object四个对象，然后再详述原型的相关知识。 1、全局对象 window 首先我们还是</description>
    </item>
    
    <item>
      <title>JS里的数据类型转换</title>
      <link>https://dreamqyq.github.io/post/JavaScript/data-type-conversion-in-js/</link>
      <pubDate>Sun, 10 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dreamqyq.github.io/post/JavaScript/data-type-conversion-in-js/</guid>
      <description>前言：之前的博客介绍了JS中的各种数据类型，那么可不可以把已经确定的数据类型转换成其他的数据类型呢？本文就将介绍一些方法达成此目的，另外还会引申的简单介绍一下JS中的内存管理、深拷贝与浅拷贝等相关知识。 1、如何将其他的数据类型转换成String字符串类型？ 注：下面介绍的三种转换成</description>
    </item>
    
    <item>
      <title>JS里的复杂数据类型：object对象</title>
      <link>https://dreamqyq.github.io/post/JavaScript/complex-data-types-in-jsobject/</link>
      <pubDate>Sat, 09 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dreamqyq.github.io/post/JavaScript/complex-data-types-in-jsobject/</guid>
      <description>前言：上一遍博客介绍了JS中的五种简单数据类型，这篇博客主要介绍JS中的复杂数据类型，object对象。注：本文参考阮一峰JS教程中关于对象的介绍，然后结合自己的理解写成，附带链接 。 1、概述 什么是对象？简单说，对象就是一组“键值对”（key-value）的集合，是一种无序的复合数</description>
    </item>
    
    <item>
      <title>JS里的简单数据类型</title>
      <link>https://dreamqyq.github.io/post/JavaScript/simple-data-types-in-js/</link>
      <pubDate>Fri, 08 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dreamqyq.github.io/post/JavaScript/simple-data-types-in-js/</guid>
      <description>前言：众所周知，JS中一共有7种数据类型，分别是number、string、boolean、null、undefined、symbol、object。其中前六种是简单数据类型，object对象属于复杂数据类型。本文大致介绍一下5中简单数据类型（symbol是ES6新增的，本文暂不</description>
    </item>
    
  </channel>
</rss>