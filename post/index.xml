<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Enoch&#39;s Blog</title>
    <link>https://enochqin.xyz/post/</link>
    <description>Recent content in Posts on Enoch&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 27 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://enochqin.xyz/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java的包管理与Maven</title>
      <link>https://enochqin.xyz/post/Java/java-package-manage-and-maven/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/Java/java-package-manage-and-maven/</guid>
      <description>前言：在Java的世界中，【包】是最基本的结构，因此包管理就是Java项目中的一件特别重要的事情。本文介绍的就是Java世界中的包管理，以及最流行的包管理工具Maven。 Java的包管理 要介绍Java的包管理，我们就要先知道什么是包： 包管理中的【包】指的是什么？ 首先，我要知道JV</description>
    </item>
    
    <item>
      <title>使用Hugo搭建个人博客网站</title>
      <link>https://enochqin.xyz/post/Linux/use-hugo-build-self-blog/</link>
      <pubDate>Sun, 12 Apr 2020 19:41:28 +0800</pubDate>
      
      <guid>https://enochqin.xyz/post/Linux/use-hugo-build-self-blog/</guid>
      <description>前言 两年前用Hexo搭建博客，但是因为各种配置问题没有继续跟进，之后就一直在简书写的博客。恰逢看到新的博客生成工具Hugo，所以重新搭建了一个个人博客网站，通过Github Pages，域名重定向来实现线上访问。本文介绍的就是如何使用Hugo搭建个人博客网站的过程。 Hugo简介 不同</description>
    </item>
    
    <item>
      <title>First Blog</title>
      <link>https://enochqin.xyz/post/first-blog/</link>
      <pubDate>Sun, 12 Apr 2020 13:02:28 +0800</pubDate>
      
      <guid>https://enochqin.xyz/post/first-blog/</guid>
      <description>使用Hogu搭建博客 Hugo官网 快速开始 开博大吉！ 自己的博客网站开通了，后续我的博客将在本站和 简书 同步更新！</description>
    </item>
    
    <item>
      <title>JavaScript中的函数防抖动与节流</title>
      <link>https://enochqin.xyz/post/JavaScript/debounce-and-throttle-in-javascript/</link>
      <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/JavaScript/debounce-and-throttle-in-javascript/</guid>
      <description>摘要：JavaScript 中的函数防抖和节流是很常用的需求，前端面试也是频率比较高被问到的知识，本文就通过二者的概念、实现思路、示例代码和应用场景来介绍一下它们。 概念 函数防抖（debounce）：其概念其实是从机械开关和继电器的“去弹跳”（debounce）衍生出来的，基本思路就</description>
    </item>
    
    <item>
      <title>Web性能优化详解</title>
      <link>https://enochqin.xyz/post/HTTP/web-performance-optimization-steps/</link>
      <pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/HTTP/web-performance-optimization-steps/</guid>
      <description>摘要：本文通过 “ 一个页面从输入 URL 到页面加载显示完成 ” 的各个步骤，来详解阐述一下每一步可以如何优化，从而让我们的网页更快的展现在用户眼前，即网站加载速度变的更快，这种优化也就是题目所说的 Web 性能优化。 1、首先浏览器会看该网页是否已经被缓存 优化：除了 html 文件外，尽量使用缓存，浏览器缓存控</description>
    </item>
    
    <item>
      <title>JavaScript中的继承</title>
      <link>https://enochqin.xyz/post/JavaScript/inheritance-in-javascript/</link>
      <pubDate>Sat, 22 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/JavaScript/inheritance-in-javascript/</guid>
      <description>摘要：继承是面向对象思想中的重要概念，虽然严格来说 JavaScript 并属于面向对象类型的语言，但最终还是在ES 6 中正式引入了继承的概念。本文就来介绍一下继承的概念、以及在 ES5 和 ES6 中两种写继承的方法。 面向对象中的继承 话不多说，先来看一下维基百科的解释 继承（ inheritance）是面向对象软件技术当</description>
    </item>
    
    <item>
      <title>常见的排序算法（JavaScript实现）</title>
      <link>https://enochqin.xyz/post/Algorithm/common-sorting-algorithms-javascript/</link>
      <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/Algorithm/common-sorting-algorithms-javascript/</guid>
      <description>冒泡排序 —— O(n^2) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function bubleSort(arr) { for(let i = 0; i &amp;lt; arr.length-1 /*i代表轮数*/; i++) { for(let j = 0; j &amp;lt; arr.length - 1 - i /*j代表当前轮选中的元素下标*/; j++) { if(arr[j] &amp;gt; arr[j+1]) { [ arr[j], arr[j+1] ] = [ arr[j+1], arr[j] ] /*交换元素*/ } //console.log(arr) } } } var arr = [10, 34, 21, 47, 3, 28] bubleSort(arr) console.log(arr) 选择排序 —— O(n^2) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function sectionSort(arr) { for(let min = i</description>
    </item>
    
    <item>
      <title>从MVC到MVVM（初识Vue）</title>
      <link>https://enochqin.xyz/post/Front-end-frame/from-mvc-to-mvvmvue/</link>
      <pubDate>Tue, 28 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/Front-end-frame/from-mvc-to-mvvmvue/</guid>
      <description>前言：看本文之前需要了解最基本的MVC思想（附一篇本人之前写的MVC设计模式在JavaScript中的运用 仅供参考）。在本篇文章中，我将先用原生JavaScript做一个小例子，然后将其先使用MVC设计模式进行代码重构，然后使用Vue框架再改写一遍，最终的代码就是使用的MVVM设</description>
    </item>
    
    <item>
      <title>浏览器缓存控制详解（cookie、session、localStorage、Cache-Control等）</title>
      <link>https://enochqin.xyz/post/HTTP/browser-cache-control-steps-cookies-session-localstorage-cache-control-etc./</link>
      <pubDate>Wed, 22 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/HTTP/browser-cache-control-steps-cookies-session-localstorage-cache-control-etc./</guid>
      <description>摘要：本文将会详细的介绍浏览器实现缓存控制的相关知识，包括cookie、session、localStorage、Cache-Control、Expires、ETag、Last-Modified等概念。 注：在看本文之前建议可以先看一下网页中的登录注册功能是如何实现的，对前端和后端</description>
    </item>
    
    <item>
      <title>网页中的登录注册功能是如何实现的</title>
      <link>https://enochqin.xyz/post/HTTP/web-site-is-how-to-implement-login-registration-function/</link>
      <pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/HTTP/web-site-is-how-to-implement-login-registration-function/</guid>
      <description>摘要：登录注册是一个网站最常用的也是最基本的功能，本文就来详细的介绍一下在网页中，实现这两个最基本的需求从后端到前端需要做些什么。 注：本文所提到的所有代码都已上传至github ，可以直接clone后在终端使用测试。 一、前置知识： 基础知识可见我之前的博客：HTTP入门（请求与响应的</description>
    </item>
    
    <item>
      <title>JS中的面向对象程序设计初识</title>
      <link>https://enochqin.xyz/post/JavaScript/object-oriented-programming-in-javascript/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/JavaScript/object-oriented-programming-in-javascript/</guid>
      <description>前言：面向对象程序设计（Object-oriented programming，简称OOP），是一种常见的编程思想。JavaScript 的核心是支持面向对象的，同时它也提供了强大灵活的 OOP 语言能力。本文从对面向对象编程的介绍开始，和您一起探索 JavaScript 的对象模型，最后描述 JavaScript 当中面向对象编程的</description>
    </item>
    
    <item>
      <title>MVC设计模式在JavaScript中的运用</title>
      <link>https://enochqin.xyz/post/JavaScript/mvc-design-pattern-in-javascript/</link>
      <pubDate>Fri, 03 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/JavaScript/mvc-design-pattern-in-javascript/</guid>
      <description>前言：MVC模式是一种很有名的、应用很广的设计模式，包括在前端领域也是非常有用的代码优化思路，本文就详细介绍总结一下MVC模式以及它JavaScript中的应用。（部分文字摘自维基百科和阮一峰博客） 1、MVC 模式的概念 MVC模式（Model–view–controller）是软件</description>
    </item>
    
    <item>
      <title>用原生JS封装类jQuery的ajax方法</title>
      <link>https://enochqin.xyz/post/HTTP/jquery-ajax-encapsulated-with-native-js/</link>
      <pubDate>Thu, 26 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/HTTP/jquery-ajax-encapsulated-with-native-js/</guid>
      <description>前言：为了深入理解jQuery中的ajax方法，本文通过使用原生JavaScript来封装一个类似的方法，能实现最基本的功能。其中会使用带promise方法。 1、ajax 的 基本功能 首先： request = new XMLHttpRequest() JS 可以设置任意请求 header ： 第一部分 request.open(&#39;get&#39;, &#39;/xxx&#39;) 第二部分 request.setRequestHeader(&#39;content-type&#39;,&#39;x-www-form-urlencoded&#39;) 第四部分 request.send(&#39;a=1&amp;amp;b=2&#39;) JS 可以获取任意响应 header 吗 第一部分 response.status</description>
    </item>
    
    <item>
      <title>JSONP、JSON、AJAX简述</title>
      <link>https://enochqin.xyz/post/HTTP/JSONP-JSON-AJAX/</link>
      <pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/HTTP/JSONP-JSON-AJAX/</guid>
      <description>前言：一个网站如果要完整的运行出来，必须要结合前端与后端，而我们作为一名前端，也是需要知道一些最基本的后端接口的知识。本文就简略的介绍一下这几个技术：JSONP、JSON、AJAX。 1、如何发请求 用 form 可以发请求，但是会刷新页面或新开页面 用 a 可以发 get 请求，但是也会刷新页面或新开页面</description>
    </item>
    
    <item>
      <title>初级前端需要知道的基础知识</title>
      <link>https://enochqin.xyz/post/Front-end-base/basic-knowledge-primary-front-end-needs-to-know/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/Front-end-base/basic-knowledge-primary-front-end-needs-to-know/</guid>
      <description>前言：本文会罗列出十道比较基础的题目，我个人作为刚入门的初级前端，写这篇文章正好可以总结汇总一下近期的知识，看到这篇文章的朋友也可以看看这十道题你是否都能正确的、完整的答出来。我个人会总结出答案放于文后，欢迎讨论。 题目详情： 1、请写出一个符合 W3C 规范的 HTML 文件，要求如下： 页面标题为「</description>
    </item>
    
    <item>
      <title>再识移动端开发（动态REM）</title>
      <link>https://enochqin.xyz/post/CSS/mobile-development-dynamic-rem/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/CSS/mobile-development-dynamic-rem/</guid>
      <description>前言：之前写过一篇博客介绍响应式移动端开发，而本文会介绍一种非响应式的移动端开发技术：动态REM。看了这两篇文章，你将会对移动端开发有全面的了解。 1、前置知识 首先来介绍一下在写CSS中常用的长度单位： px：即像素，最最常用 rem：即root em，表示根元素的font-size，根</description>
    </item>
    
    <item>
      <title>关于Deepin突然死机、重启后黑屏无法操作</title>
      <link>https://enochqin.xyz/post/Linux/deepin-suddenly-after-crash-restart-black-screen-cant-operate/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/Linux/deepin-suddenly-after-crash-restart-black-screen-cant-operate/</guid>
      <description>前言：使用deepin系统也有一段时间了，但因为其不稳定性，着实出现了一些bug ，不过绝大多数都能用重启来解决，直到今天，我的deepin差点崩掉。 出现的问题 这次出现的问题大致如题目所说，下面详细描述一下： 在我因为正常的一系列操作后，首先是出现了鼠标错位的情况，然后我日常Goog</description>
    </item>
    
    <item>
      <title>用原生JavaScript实现类jQuery效果</title>
      <link>https://enochqin.xyz/post/Front-end-frame/native-javascript-implementation-jquery/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/Front-end-frame/native-javascript-implementation-jquery/</guid>
      <description>前言：众所周知，原生JS的DOM API大多都是很难用的，而在十二年前，已经有了一个很实用的库，它封装了很多好用的方法，让JavaScript更有易用性，如今全世界至少70%的网站都在使用，这个库就是jQuery。为了更容易理解jQuery的实现过程，这篇文章将用原生JS实现jQu</description>
    </item>
    
    <item>
      <title>认识JavaScript中的函数</title>
      <link>https://enochqin.xyz/post/JavaScript/function-in-javascript/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/JavaScript/function-in-javascript/</guid>
      <description>前言：本文将详细的介绍JS中函数的相关概念（包括函数的call stack 、this 、作用域、闭包、柯里化、高阶函数等），总结函数中比较容易理解错的坑，让我们更加全面的认识函数。部分概念与代码参考阮一峰JS教程。 1、什么是函数 函数是一段可以反复调用的代码块。函数还能接受输入的参数，不同的参</description>
    </item>
    
    <item>
      <title>JavaScript里的数组详解</title>
      <link>https://enochqin.xyz/post/JavaScript/array-in-javascript/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/JavaScript/array-in-javascript/</guid>
      <description>前言：这篇文章用于了解总结JS里的数组的相关知识。我会从基本概念，构造方法和常用的API这几个方面来介绍数组。部分概念与代码摘自阮一峰JS教程。 1、数组是什么 数组（array）是按次序排列的一组值。每个值的位置都有编号（从0开始），整个数组用方括号表示。 其实本质上，数组属于一种特</description>
    </item>
    
    <item>
      <title>JavaScript中的文档对象模型DOM</title>
      <link>https://enochqin.xyz/post/JavaScript/document-object-model-in-javascript/</link>
      <pubDate>Mon, 18 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/JavaScript/document-object-model-in-javascript/</guid>
      <description>前言：在JavaScript中，DOM操作虽然公认的不好用，但它是最基础的，那么就让我们通过本文就来认识一下DOM的基本概念、一些常用的API以及一些需要注意的知识点。 1、DOM 到底是个什么鬼 文档对象模型 (Document Object Model ，即DOM) 是HTML和XML文档的编程接口。它提供了对文档的结构化的</description>
    </item>
    
    <item>
      <title>初识传说中的原型与原型链</title>
      <link>https://enochqin.xyz/post/JavaScript/prototype-prototype-chain-in-js/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/JavaScript/prototype-prototype-chain-in-js/</guid>
      <description>前言：原型与原型链这两个名词毋庸置疑听起来是很高大上的，以前总是出现在传说中，这两天看了教程，准备介绍一下这传说中的原型以及原型链。本文将从全局对象引入，分别介绍Number、Boolean、String、Object四个对象，然后再详述原型的相关知识。 1、全局对象 window 首先我们还是</description>
    </item>
    
    <item>
      <title>CSS中的flex布局详解</title>
      <link>https://enochqin.xyz/post/CSS/rounding-out-flex-css-layout/</link>
      <pubDate>Tue, 12 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/CSS/rounding-out-flex-css-layout/</guid>
      <description>前言：之前我写过的一篇博客介绍CSS常用的几种布局方式，PC端最常见的就是浮动布局和flex布局，而在移动端，由于不用顾忌IE这个业界大坑，flex布局应用的就更广泛了，多以本文就来详细的介绍一些flex布局。 1、先不说flex布局 首先我们回顾一下除了flex布局之外的常用布局方</description>
    </item>
    
    <item>
      <title>JS里的数据类型转换</title>
      <link>https://enochqin.xyz/post/JavaScript/data-type-conversion-in-js/</link>
      <pubDate>Sun, 10 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/JavaScript/data-type-conversion-in-js/</guid>
      <description>前言：之前的博客介绍了JS中的各种数据类型，那么可不可以把已经确定的数据类型转换成其他的数据类型呢？本文就将介绍一些方法达成此目的，另外还会引申的简单介绍一下JS中的内存管理、深拷贝与浅拷贝等相关知识。 1、如何将其他的数据类型转换成String字符串类型？ 注：下面介绍的三种转换成</description>
    </item>
    
    <item>
      <title>JS里的复杂数据类型：object对象</title>
      <link>https://enochqin.xyz/post/JavaScript/complex-data-types-in-jsobject/</link>
      <pubDate>Sat, 09 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/JavaScript/complex-data-types-in-jsobject/</guid>
      <description>前言：上一遍博客介绍了JS中的五种简单数据类型，这篇博客主要介绍JS中的复杂数据类型，object对象。注：本文参考阮一峰JS教程中关于对象的介绍，然后结合自己的理解写成，附带链接 。 1、概述 什么是对象？简单说，对象就是一组“键值对”（key-value）的集合，是一种无序的复合数</description>
    </item>
    
    <item>
      <title>JS里的简单数据类型</title>
      <link>https://enochqin.xyz/post/JavaScript/simple-data-types-in-js/</link>
      <pubDate>Fri, 08 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/JavaScript/simple-data-types-in-js/</guid>
      <description>前言：众所周知，JS中一共有7种数据类型，分别是number、string、boolean、null、undefined、symbol、object。其中前六种是简单数据类型，object对象属于复杂数据类型。本文大致介绍一下5中简单数据类型（symbol是ES6新增的，本文暂不</description>
    </item>
    
    <item>
      <title>初识移动端（响应式）</title>
      <link>https://enochqin.xyz/post/CSS/first-mobile-terminal-response/</link>
      <pubDate>Thu, 07 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/CSS/first-mobile-terminal-response/</guid>
      <description>前言：今天初次了解了移动端的一些常识，包括PC端和移动端的区别，媒体查询等的相关操作,以及国内的网站如何实现不同的端展示不同的样式。 1、媒体查询（附带MDN解释） 一个媒体查询由一个可选的媒体类型和零个或多个使用媒体功能的限制了样式表范围的表达式组成，例如宽度、高度和颜色。媒体查询</description>
    </item>
    
    <item>
      <title>CSS堆叠上下文</title>
      <link>https://enochqin.xyz/post/CSS/css-stacked-context/</link>
      <pubDate>Sat, 02 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/CSS/css-stacked-context/</guid>
      <description>前言：设置了z-index:9999;的层叠顺序一定高于z-index:0;吗？很明显这句话在某些情况下是不成立的，而引起其不成立的原因就是堆叠上下文的现象。本文主要介绍关于css中堆叠上下文的概念、引起的原因等。 注：友情链接：关于堆叠上下文的MDN介绍，张鑫旭的博客《深入理解C</description>
    </item>
    
    <item>
      <title>元素的高度与宽度以及衍生技巧</title>
      <link>https://enochqin.xyz/post/CSS/element-width-and-height-and-skills/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/CSS/element-width-and-height-and-skills/</guid>
      <description>前言：本文主要写块级元素与内联元素的宽度与高度的相关知识，以及相关的衍生技巧，包括一些常用的居中方法等（与我的上一篇博客css如何居中不同，上一篇是把所有能用来居中的方法都介绍了一遍，本篇只写常用的方法，可以应对80%的情况） 1、块级元素宽高 块级元素的高度由其内部文档流的高度的总</description>
    </item>
    
    <item>
      <title>CSS如何居中</title>
      <link>https://enochqin.xyz/post/CSS/css-how-center/</link>
      <pubDate>Tue, 22 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/CSS/css-how-center/</guid>
      <description>本文翻译自CSS Tricks 中关于居中的相关介绍。 1、水平居中 内联元素的水平居中（如链接或文本） 可以在一个块级别的父元素中水平地居中内联元素，只需： 1 2 3 .center-children { text-align: center; } 注：这种写法适用于inline, inline-block, inline-table, inline-flex等等。 代码示例： =&amp;gt; html代码 1 2 3 4 5 6 7 8 9 10 &amp;lt;header&amp;gt; This text is centered. &amp;lt;/header&amp;gt; &amp;lt;nav role=&amp;#39;navigation&amp;#39;&amp;gt; &amp;lt;a</description>
    </item>
    
    <item>
      <title>CSS左右布局、左中右布局以及一些小技巧</title>
      <link>https://enochqin.xyz/post/CSS/css-layout-some-tips/</link>
      <pubDate>Tue, 22 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/CSS/css-layout-some-tips/</guid>
      <description>1、左右布局 如果有以下html结构，设置左右两栏布局 &amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;leftChild&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;rightChild&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; 设置浮动：左右布局常用的方法就是为子元素设置浮动，然后在其父元素上使用clearfix类清除浮动。示例代码如下： .clearfix::after{ content:&amp;quot;&amp;quot;; display:block; clear:both; } .leftChild, .rightChild{ float:left; } 设置position绝对定位，为父元素设置position:relative; 为子元</description>
    </item>
    
    <item>
      <title>初识CSS</title>
      <link>https://enochqin.xyz/post/CSS/i-met-css/</link>
      <pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/CSS/i-met-css/</guid>
      <description>CSS，中文称之为“层叠样式表”，英文全称为 Cascading Style Sheets 。一种用来为结构化文档（如HTML文档或XML应用）添加样式（字体、间距和颜色等）的计算机语言，由W3C定义和维护。目前最广泛运用的版本是CSS 2.1(链接为CSS2.1的官方文档)。 1. 学习资源： MDN =&amp;gt; Google 关键词 + MDN （用来查询css属</description>
    </item>
    
    <item>
      <title>Deepin与Windows8.1双系统启动项恢复</title>
      <link>https://enochqin.xyz/post/Linux/Deepin-and-Windows8.1-dual-system-boot-item-recovery/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/Linux/Deepin-and-Windows8.1-dual-system-boot-item-recovery/</guid>
      <description>前言： 这两天在折腾双系统，打算体验一下传说中的Linux的美妙之处，由于是第一次使用Linux，并且主旨不在折腾系统，只是想尝试Linux的环境以及更优雅的写代码，所以选择了相对不折腾的Deepin，但是还是遇到了各种奇葩的问题。比如这篇文章要写的启动项。 问题起因 安装完deepi</description>
    </item>
    
    <item>
      <title>Linux系统中VI下莫名出现的^M</title>
      <link>https://enochqin.xyz/post/Linux/Linux-system-VI-M/</link>
      <pubDate>Sun, 13 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/Linux/Linux-system-VI-M/</guid>
      <description>本文写自我从windows转到Linux系统下，各种找bug的日常 首先就是我在windows下写的运行很正常的bash脚本和node脚本，在Linux的终端里用vim运行，各种报错。 比如运行这一句：#! /usr/bin/env node旨在让node文件可以直接默认用node运行，而不用node file</description>
    </item>
    
    <item>
      <title>HTTP入门（请求与响应的基本知识）</title>
      <link>https://enochqin.xyz/post/HTTP/basic-knowledge-entry-http-request-response/</link>
      <pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/HTTP/basic-knowledge-entry-http-request-response/</guid>
      <description>摘要：本文主要介绍HTTP的最基本的知识，包括request请求、response响应、常见的响应状态码、GET请求与POST请求的区别。 一、HTTP 请求 1. http请求操作/curl命令 curl -s -v -H &amp;quot;Frank: xxx&amp;quot; -- &amp;quot;https://www.baidu.com&amp;quot;//GET获取</description>
    </item>
    
    <item>
      <title>git 入门</title>
      <link>https://enochqin.xyz/post/Front-end-base/introduction-to-git/</link>
      <pubDate>Sat, 28 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/Front-end-base/introduction-to-git/</guid>
      <description>前言：是一个分散式版本控制软件，最初由林纳斯·托瓦兹制作，于2005年以GPL协议出品。如网站github，本文简单的介绍一些的git 的常用操作。 1、 git init 命令作用：在当前目录新建一个Git代码库 使用时间：当需要创建新仓库时使用 代码实例：git init 2、 git add 命令作用：添加指定文件到暂存</description>
    </item>
    
    <item>
      <title>命令行初识（介绍常用命令）</title>
      <link>https://enochqin.xyz/post/Front-end-base/command-line-tcommonly-used-command/</link>
      <pubDate>Sat, 28 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://enochqin.xyz/post/Front-end-base/command-line-tcommonly-used-command/</guid>
      <description>1、ls命令 —— 显示当前目录下的路径 该命令对应的单词是list ，其不加参数时不显示隐藏文件。中包含以下常用的参数说明： ls -a 显示当前目录下的所有文件（包括以.开头的隐藏文件） ls -l显示当前目录下文件的详细信息 ls -al 显示当前目录下的所有文件的详细信息 注：详细信息中的字母含义（drwx）</description>
    </item>
    
  </channel>
</rss>